@page "/language-dashboard/{Id}"
@using LingoLabs.App.Auth
@using LingoLabs.App.Contracts.AuthContracts
@using LingoLabs.App.Contracts.EnrollmentContracts
@using LingoLabs.App.Services.AuthServices
@using LingoLabs.App.ViewModel.EnrollmentModels
@using LingoLabs.App.ViewModel.LanguageModels
@using LingoLabs.App.ViewModel.MudBlazor
@using LingoLabs.App.ViewModel.Responses
@using MudBlazor
@using MatBlazor
@using System.Net.Http.Json
@using ViewModel.MudBlazor
@inject NavigationManager NavigationManager
@inject CustomStateProvider AuthStateProvider
@inject HttpClient httpClient
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject StateService StateService


<div class="d-flex justify-content-around bg-secondary mb-3 align-items-center" style="width: 100%; height: 250px; margin-top: -10px; background: linear-gradient(to right, #2563EB, #36A7FC); position: relative; z-index: 1;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -45px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -30px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -15px; max-width: 150px;">
    <img src="/images/homepage/jos.png" style="position: absolute; bottom: 0; right: 0; max-width: 150px;">
    <img src="/images/homepage/sus.png" style="position: absolute; top: 0; right: 0; max-width: 200px;">
</div>

@* GET BY ID INFORMATIONS *@
<MudContainer>
    <div class="row mx-0 justify-content-md-center" style="margin-top: -175px; margin-bottom: 40px;">
        <div class="col-md-6 d-flex flex-column align-items-center justify-content-center" style="background-color: #E9EFFD; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); z-index: 1; border-radius: 15px;">
            @if (!IsDataLoaded)
            {
                <div class="text-center" style="margin-top: 10px; margin-bottom: 25px;">
                    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
                </div>
            }
            else
            {
                <div class="row">
                    <h1 style="color: #2563EB; padding: 20px; margin-top: 10px;" class="poppins-semi-bold">@Language.LanguageName</h1>
                </div>
            }
        </div>
    </div>

    @if (!IsDataLoaded)
    {
        <div class="text-center" style="margin-top: 100px; margin-bottom: 48px;">
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        </div>
    }
    else
    {
        @if (!string.IsNullOrEmpty(Language.LanguageDescription))
        {
            <div class="row" style="max-width: 100vw; overflow-x: auto; margin-top: 100px; margin-bottom: 40px;">
                <div class="col">
                    <div class="text-center" style="display: flex; flex-direction: column; justify-content: center; height: 100%;">
                        <p style="color: black; font-size: 22px;" class="poppins-semi-bold">@Language.LanguageDescription</p>
                    </div>
                </div>

                <div class="col d-flex align-items-center justify-content-center">
                    <img src="@Language.LanguageFlag" style="max-width: 275px; height: auto;">
                </div>
            </div>

            <div class="row">
                <div class="col text-center">
                    <MudIcon Icon="@Icons.Material.Filled.KeyboardDoubleArrowDown" Style="font-size: 48px;" Class="animated-arrow"></MudIcon>
                </div>
            </div>
        }
        else
        {
            <div class="row" style="margin-top: 150px; margin-bottom: 70px;">
                <div class="col d-flex align-items-center justify-content-center">
                    <img src="@Language.LanguageFlag" style="max-width: 275px; height: auto;">
                </div>
            </div>
        }
    }

    @if (!IsDataLoaded)
    {
        <div class="text-center" style="margin-top: 45px; margin-bottom: 10px;">
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        </div>
    }
    else
    {
        @if (!string.IsNullOrEmpty(Language.LanguageVideoLink))
        {
            <div class="row" style="margin-top: 45px; margin-bottom: 10px;">
                <div class="col">
                    <div class="text-center" style="display: flex; flex-direction: column; justify-content: center; height: 100%;">
                        <p class="custom-text" style="font-size: 40px; margin-bottom: -3px;">
                            <span style="color: #FC6F05;"><strong>Learn</strong></span>,
                            <span style="color: #2563EB;"><strong>speak</strong></span>,
                            <span style="color: lawngreen;"><strong>thrive</strong></span>
                        </p>
                        <p style="font-size: 25px;">Our video shows you the way</p>
                    </div>
                </div>
            </div>

            <div class="row" style="margin-bottom: 70px;">
                <div class="col text-center">
                    <iframe style="width: 700px; height: 394px; margin-top: 9px;" src="@Language.LanguageVideoLink" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </div>
            </div>
        }
    }
</MudContainer>

@* LANGUAGE LEVELS *@
<div class="text-center">
    <h1 style="color: black; font-size: 33px; margin-top: 120px; margin-bottom: 25px;">
        Understand the Linguistic <span style="color: #FC6F05;">Journey</span>
    </h1>
    <h2 style="font-size: 19px; margin-bottom: 30px;">
        Climb from the basics to mastery, knowing exactly your level of expertise in every domain!
    </h2>
</div>

@if (!IsDataLoaded)
{
    <div class="text-center" style="margin-top: 45px; margin-bottom: 10px;">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </div>
}
else
{
    <MudContainer>
        <MudTimeline>
            @for (int i = 0; i < Language.LanguageLevels.Count; i++)
            {
                LanguageLevelViewModel languageLevel = Language.LanguageLevels[i];
                string alignment = i % 2 == 0 ? "text-left" : "text-right";

                <MudTimelineItem Size="Size.Small">
                    <ItemContent>
                        <div class="@alignment">
                            <MudText Typo="Typo.h6" GutterBottom="true" Style="font-size: 25px;"><span style="color: #2563EB;">@languageLevel.LanguageLevelName</span> - <span style="color: #FC6F05;">@languageLevel.LanguageLevelAlias</span></MudText>
                            <MudText Style="color: black; font-size: 17px;"><strong>@languageLevel.LanguageLevelDescription</strong></MudText>
                            <MudButton OnClick="() => NavigateToLanguageLevel(languageLevel.LanguageLevelId)" Style="margin-top: 5px; background-color: #2563EB; color: white;">See More</MudButton>
                        </div>
                    </ItemContent>
                </MudTimelineItem>
            }
        </MudTimeline>
    </MudContainer>
}

@* USER PROGRESS *@

<div class="text-center">
    <h1 style="color: black; font-size: 33px; margin-top: 140px;">
        View your language <span style="color: #FC6F05;">growth</span>
    </h1>
    <h2 style="font-size: 19px; margin-bottom: 20px;">
        Track your progress and see how far you’ve come in mastering your language skills!
    </h2>
</div>

@if (IsDataLoaded) {
    <MudContainer>
        @foreach (var competence in Language.LanguageCompetences)
        {
            <div class="row justify-content-center align-items-center" style="padding: 15px;">
                <div class="col text-center">
                    <p style="font-size: 22px; color: black;">@competence.LanguageCompetenceName</p>
                </div>
                <div class="col text-left" style="width: 70%; height: 70%;">
                    <MudTimeline TimelineOrientation=TimelineOrientation.Horizontal TimelinePosition=TimelinePosition.Bottom Reverse=false>
                        @{
                            bool found = false;
                            if (enrollment.UserCompetenceLevelDictionary.ContainsKey(competence.LanguageCompetenceId))
                            {
                                @foreach (var level in Language.LanguageLevels)
                                {
                                    if (enrollment.UserCompetenceLevelDictionary[competence.LanguageCompetenceId] == level.LanguageLevelId)
                                    {
                                        found = true;
                                        <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">
                                            <ItemContent>
                                                <MudAlert Severity="Severity.Success">@level.LanguageLevelName</MudAlert>
                                            </ItemContent>
                                        </MudTimelineItem>
                                    }
                                    else if (!found && enrollment.UserCompetenceLevelDictionary[competence.LanguageCompetenceId] != level.LanguageLevelId)
                                    {
                                        <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">
                                            <ItemContent>
                                                <MudAlert Severity="Severity.Success">@level.LanguageLevelName</MudAlert>
                                            </ItemContent>
                                        </MudTimelineItem>
                                    }
                                    else if (found && enrollment.UserCompetenceLevelDictionary[competence.LanguageCompetenceId] != level.LanguageLevelId)
                                    {
                                        <MudTimelineItem Color="Color.Dark" Variant="Variant.Filled">
                                            <ItemContent>
                                                <MudAlert Severity="Severity.Normal">@level.LanguageLevelName</MudAlert>
                                            </ItemContent>
                                        </MudTimelineItem>
                                    }
                                }
                            }
                            else
                            {
                                @foreach (var level in Language.LanguageLevels)
                                {
                                    <MudTimelineItem Color="Color.Dark" Variant="Variant.Filled">
                                        <ItemContent>
                                            <MudAlert Severity="Severity.Normal">@level.LanguageLevelName</MudAlert>
                                        </ItemContent>
                                    </MudTimelineItem>
                                }
                            }
                        }
                    </MudTimeline>
                </div>
                <div class="col text-center">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToLanguageCompetence" Style="background-color: #FC6F05; color: white; padding: 10px;">Advance now</MudButton>
                </div>
            </div>
        }

        <div class="container-fluid p-3" style="background-color: #E9EFFD; margin-top: 60px;">
            <div class="row justify-content-center">
                <div class="col-md-6 text-center">
                    <h2 class="p-2" style="color: #2563EB; margin-left: 76px; font-size: 18px;">Optimize your time and effort by simultaneously improving all your skills.</h2>
                </div>
                <div class="col-md-6 d-flex justify-content-center align-items-center">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="background-color: #2563EB; color: white; padding: 10px; width: 60%;">Start Now</MudButton>
                </div>
            </div>
        </div>

        <div style="padding: 15px; margin-bottom: 10px; margin-top: 60px;">
            <p class="text-center" style="color: black; font-size: 18px;">
                <MudIcon icon="@Icons.Material.Filled.Checklist" Size=Size.Large Color="Color.Success" />
                Eager for rapid progress? Assess your knowledge with a quick test and move up to the next level:
            </p>
            <div class="text-center">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="background-color: #2563EB; color: white; padding: 10px; width: 25%;">Start the test now!</MudButton>
            </div>
        </div>
    </MudContainer>
}
else
{
    <div class="text-center" style="margin-top: 45px; margin-bottom: 10px;">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </div>
}

<style>
    @@keyframes moveArrow {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(20px);
        }
        100% {
            transform: translateY(0);
        }
    }

    .animated-arrow {
        animation: moveArrow 2s infinite;
    }
</style>

@code {
    [Inject]
    public ILanguageDataService LanguageDataService { get; set; }

    [Inject]
    public IAuthenticationService AuthenticationService { get; set; }

    [Inject]
    public IEnrollmentDataService EnrollmentDataService { get; set; }

    private LanguageViewModel Language { get; set; } = new LanguageViewModel();
    private EnrollmentViewModel enrollment { get; set; } = new EnrollmentViewModel();
    private bool IsDataLoaded = false;

    [Parameter]
    public string Id { get; set; }
    Guid CurrentEnrollmentId = Guid.Empty;
    Guid CurrentLanguageId = Guid.Empty;
}

@functions {
    private LanguageElement language = new LanguageElement();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;
        var claims = user.Claims.ToList();

        CurrentEnrollmentId = Guid.Parse(Id);

        enrollment = await EnrollmentDataService.GetEnrollmentByIdAsync(CurrentEnrollmentId);
        foreach (var userLanguageLevel in enrollment.UserLanguageLevels)
        {
            if (!enrollment.UserCompetenceLevelDictionary.ContainsKey(userLanguageLevel.LanguageCompetenceId))
            {
                enrollment.UserCompetenceLevelDictionary[userLanguageLevel.LanguageCompetenceId] = userLanguageLevel.LanguageLevelId;
            }
        }


        var LanguageId = enrollment.LanguageId;

        Language = (await LanguageDataService.GetLanguageByIdAsync(LanguageId));

        IsDataLoaded = true;
    }

    void NavigateToLanguageCompetence()
    {
        NavigationManager.NavigateTo("/language-competence-dashboard");
    }

    void NavigateToLanguageLevel(Guid languageLevelId)
    {
        NavigationManager.NavigateTo($"/language-level-dashboard/{languageLevelId}");
    }
}
