@page "/choose-language"
@using LingoLabs.App.Auth
@using LingoLabs.App.Contracts.AuthContracts
@using LingoLabs.App.Services.AuthServices
@using LingoLabs.App.ViewModel.LanguageModels
@using LingoLabs.App.ViewModel.MudBlazor
@using MudBlazor
@using MatBlazor
@using System.Net.Http.Json
@using ViewModel.MudBlazor
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@inject CustomStateProvider AuthStateProvider
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject StateService StateService

<MudContainer>
    <div class="text-center" style="margin-top: 50px; margin-bottom:50px;">
        <h2 style="color: black;" class="poppins-semi-bold">Ce ți-ar plăcea să înveți?</h2>
    </div>
</MudContainer>

@if (!IsDataLoaded)
{
    <div class="text-center" style="margin-top: 10px; margin-bottom: 25px;">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </div>
}
else if (Languages == null || !Languages.Any())
{
    <div class="text-center">
        <h2 style="font-size: 17px; margin-bottom: 30px;">
            Nu există niciun curs disponibil.
        </h2>
    </div>
}
else
{
    <div class="container-fluid p-3" style="margin-bottom: 80px;">
        <div class="row justify-content-center">

            @foreach (LanguageViewModel language in Languages)
            {
                <div class="col-md-3 d-flex align-items-stretch" style="display: flex; justify-content: center;">
                    <MudButton Variant="Variant.Text" OnClick="() => NavigateToWantPlacementTest(language.LanguageId)" Style="padding: 10px;">
                        <div class="card d-flex flex-column justify-content-center" style="box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.5);">
                            <div class="row text-center" style="padding: 20px;">
                                <img src="@language.LanguageFlag" style="max-width: 150px; height: auto;">
                            </div>
                            <div class="row text-center" style="font-size: 19px; margin-bottom: 10px;">
                                <strong>
                                    @language.LanguageName
                                </strong>
                            </div>
                        </div>
                    </MudButton>
                </div>
            }

        </div>
    </div>
 }


@code {
    [Inject]
    public ILanguageDataService LanguageDataService { get; set; }

    [Inject]
    public IAuthenticationService AuthenticationService { get; set; }

    public List<LanguageViewModel> Languages { get; set; } = new List<LanguageViewModel>();
    private bool IsDataLoaded = false;
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;
        var claims = user.Claims.ToList();

        Languages = (await LanguageDataService.GetAllLanguagesAsync()).Take(3).ToList();

        IsDataLoaded = true;
    }

    void NavigateToWantPlacementTest(Guid languageId)
    {
        StateService.SetId(languageId);
        NavigationManager.NavigateTo("/want-placement-test");
    }
}
