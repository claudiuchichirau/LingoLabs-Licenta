@page "/dashboard"
@using LingoLabs.App.Auth
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using System.Net.Http.Json
@using static MudBlazor.CategoryTypes
@using ViewModel.MudBlazor
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject CustomStateProvider authStateProvider
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap" rel="stylesheet">


<div class="d-flex justify-content-around bg-secondary mb-3 align-items-center" style="width: 100%; height: 250px; margin-top:-10px; background: linear-gradient(to right, #2563EB, #36A7FC); position: relative; z-index: 1;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -45px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -30px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -15px; max-width: 150px;">
    <img src="/images/homepage/jos.png" style="position: absolute; bottom: 0; right: 0; max-width: 150px;">
    <img src="/images/homepage/sus.png" style="position: absolute; top: 0; right: 0; max-width: 200px;">
</div>

<MudContainer>
    <div class="row mx-0 justify-content-md-center" style="margin-top: -175px; margin-bottom:50px;">
        <div class="col-md-6 d-flex flex-column align-items-center justify-content-center" style="background-color: #E9EFFD; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); z-index: 1; border-radius: 15px;">
            <div class="row">
                <h2 style="color: #2563EB; padding: 20px; margin-top: 10px;" class="poppins-semi-bold">Bine ai revenit, !</h2>
            </div>
        </div>
    </div>
</MudContainer>

@if (HasAdminRole)
{
    <div class="text-left">
        <h1 style="color: black; font-size: 33px; padding: 15px; margin-left: 80px; margin-top: 100px; margin-bottom: 20px;" class="poppins-semi-bold">Aprobarea administratorilor</h1>
    </div>

    <div style="max-width: 80%; margin: auto;">
        <MudPaper Class="pa-4">
            <MudStack Spacing="0">
                <MudButton OnClick="OnExpandCollapseClick" Class="poppins-semi-bold">
                    @if (Elements.Any())
                    {
                        <MudIcon Icon="@Icons.Material.Filled.FiberNew" Size=Size.Large Style="background-color: transparent; color: #FC6F05; margin-right: 10px;" />
                    }
                    @(_expanded ? "Ascunde" : "Vezi cererile Administratorilor")
                </MudButton>

                <MudCollapse Expanded="_expanded">
                    <MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<AdminElement,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6" Style="color: black;">Tabel Aprobare Administratori</MudText>
                            <MudSpacer />
                            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh Class="text-center poppins-semi-bold">Prenume</MudTh>
                            <MudTh Class="text-center poppins-semi-bold">Nume</MudTh>
                            <MudTh Class="text-center poppins-semi-bold">Email</MudTh>
                            <MudTh Class="text-center poppins-semi-bold">Acțiune</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Prenume" Class="text-center">@context.FirstName</MudTd>
                            <MudTd DataLabel="Nume" Class="text-center">@context.LastName</MudTd>
                            <MudTd DataLabel="Email" Class="text-center">@context.Email</MudTd>
                            <MudTd DataLabel="Acțiune" Class="d-flex justify-content-evenly">
                                <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="@( () => Approve(context) )">Aprobă</MudButton>
                                <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@( () => Reject(context) )">Respinge</MudButton>
                            </MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                </MudCollapse>
            </MudStack>
        </MudPaper>
    </div>

    <div class="text-left">
        <h1 style="color: black; font-size: 33px; padding: 15px; margin-left: 80px; margin-top: 100px;" class="poppins-semi-bold">Cursuri</h1>
    </div>

    <div style="max-width: 80%; margin: auto; margin-bottom: 55px;">
        <MudTable Items="@AdminLanguageElements" Dense="@dense" Hover="@hover" ReadOnly="@ronly" CanCancelEdit="@canCancelEdit" Filter="new Func<AdminViewLanguageElement,bool>(FilterFuncViewLanguage)"
                  @bind-SelectedItem="selectedAdminLanguage" SortLabel="Sort By" CommitEditTooltip="Commit Edit"
                  OnCommitEditClick="@(() => EditLanguage())"
                  IsEditRowSwitchingBlocked="@blockSwitch" ApplyButtonPosition="@applyButtonPosition" EditButtonPosition="@editButtonPosition" EditTrigger="@editTrigger">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Cursurile LingoLabs</MudText>
                <MudSpacer />
                <div class="text-center" style="width: 55%;">
                    <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Style="width: 50%;" />
                </div>
                <MudTooltip Text="Add">
                    <MudFab Icon="@Icons.Material.Filled.Add" Style="background-color: #FC6F05; color: white;" @onclick='() => OpenDialog()' />
                </MudTooltip>
            </ToolBarContent>

            <ColGroup>
                @if (applyButtonPosition.DisplayApplyButtonAtStart() || (editButtonPosition.DisplayEditButtonAtStart() && editTrigger == TableEditTrigger.EditButton))
                {
                    <col style="width:50px;" />
                }
                <col style="width:10%;" />
                <col style="width:30%x;" />
                <col style="width:20%;" />
                <col style="width:15%;" />
                <col />
                @if (applyButtonPosition.DisplayApplyButtonAtEnd() || (editButtonPosition.DisplayEditButtonAtEnd() && editTrigger == TableEditTrigger.EditButton))
                {
                    <col style="width:50px;" />
                }
            </ColGroup>
            <HeaderContent>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<AdminViewLanguageElement, object>(x=>x.LanguageName)">Nume</MudTableSortLabel></MudTh>
                <MudTh>Descriere</MudTh>
                <MudTh>Link Video</MudTh>
                <MudTh>Steag</MudTh>
                <MudTh>Vizualizează</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nume">@context.LanguageName</MudTd>
                <MudTd DataLabel="Descriere">@context.LanguageDescription</MudTd>
                <MudTd DataLabel="Link Video">@context.LanguageVideoLink</MudTd>
                <MudTd DataLabel="Steag">
                    <img src="@context.LanguageFlag" style="max-width: 50px;"/>
                </MudTd>
                <MudTd DataLabel="Vizualizează">
                    <MudButton Variant="Variant.Filled" Style="background-color: #2563EB; color: white;" OnClick="@( () => NavigateToLanguageOverview() )">Vezi mai multe</MudButton>
                </MudTd>
            </RowTemplate>
            <RowEditingTemplate>
                <MudTd DataLabel="Nume">@context.LanguageName</MudTd>
                <MudTd DataLabel="Descriere">
                    <MudTextField @bind-Value="@context.LanguageDescription" />
                </MudTd>
                <MudTd DataLabel="Link Video">
                    <MudTextField @bind-Value="@context.LanguageVideoLink" />
                </MudTd>
                <MudTd DataLabel="Steag">
                    <MudTextField @bind-Value="@context.LanguageFlag" />
                </MudTd>
                <MudTd DataLabel="Vizualizează"></MudTd>
            </RowEditingTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
            <EditButtonContent Context="button">
                <div style="display: flex; flex-direction: row;" >
                    <MudTooltip Text="Edit Course">
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" Style="margin-right: 10px;" />
                    </MudTooltip>
                    <MudTooltip Text="Delete Course">
                        <MudIconButton Text="Delete Course" Size="@Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="DeleteLanguage" Class="pa-0" Style="margin-left: 10px;" />
                    </MudTooltip>
                </div>
            </EditButtonContent>
        </MudTable>

        <MudDialog @bind-IsVisible="visible" Options="dialogOptions">
            <TitleContent>
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.PlaylistAddCircle" Size="Size.Large" Style="background-color: transparent; color: #2563EB;" />
                    <span style="color: #2563EB;">Adaugă un curs</span>
                </MudText>
            </TitleContent>
            <DialogContent>
                <MudTextField T="string" @bind-Value="LanguageNameValue" Label="Nume"></MudTextField>
            </DialogContent>
            <DialogActions>
                <MudButton Variant="Variant.Filled" OnClick="Cancel" Class="px-10" Style="color: black;">Close</MudButton>
                <MudButton Disabled="LanguageNameValue == null" OnClick="@(async () => AddLanguage(LanguageNameValue))" Style="color: #2563EB;">Add</MudButton>

            </DialogActions>
        </MudDialog>
    </div>
}



@if (HasStudentRole)
{

    <div class="text-left">
        <h1 style="color: #FC6F05; font-size: 33px; padding: 15px; margin-left: 85px; margin-top: 85px;" class="poppins-semi-bold">Cursurile Mele</h1>
    </div>


    <MudExpansionPanels MultiExpansion="true">
        <div class="custom-width">
            @foreach (var language in UserLanguages)
            {
                <MudExpansionPanel Text="@language.LanguageName" Style="color: #2563EB;">
                    <div>
                        <div style="padding: 15px; margin-bottom: 10px;">
                            <p class="text-center" style="color: black; font-size: 18px;"><MudIcon Icon="@Icons.Material.Filled.Analytics" Size=Size.Large Color="Color.Success" />Tabla ta de progres pentru @language.LanguageName</p>
                        </div>

                        @foreach (var competence in language.UserLanguageLevels)
                        {
                            <div class="row justify-content-center align-items-center" style="padding: 15px;">
                                <div class="col text-center">
                                    <p style="font-size: 22px; color: black;">@competence.LanguageCompetence</p>
                                </div>
                                <div class="col text-left" style="width: 70%; height: 70%;">
                                    <MudTimeline TimelineOrientation=TimelineOrientation.Horizontal TimelinePosition=TimelinePosition.Bottom Reverse=false>
                                        @foreach (var level in LanguageLevels)
                                        {
                                            if (String.Compare(level, competence.LanguageLevel) <= 0)
                                            {
                                                <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">
                                                    <ItemContent>
                                                        <MudAlert Severity="Severity.Success">@level</MudAlert>
                                                    </ItemContent>
                                                </MudTimelineItem>
                                            }
                                            else
                                            {
                                                <MudTimelineItem Color="Color.Dark" Variant="Variant.Filled">
                                                    <ItemContent>
                                                        <MudAlert Severity="Severity.Normal">@level</MudAlert>
                                                    </ItemContent>
                                                </MudTimelineItem>
                                            }
                                        }
                                    </MudTimeline>
                                </div>
                                <div class="col text-center">
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="background-color: #FC6F05; color: white; padding: 10px;">Progresează!</MudButton>
                                </div>
                            </div>
                        }

                        <div class="container-fluid p-3" style="background-color: #E9EFFD; margin-top: 60px;">
                            <div class="row justify-content-center">
                                <div class="col-md-6 text-center">
                                    <h2 class="p-2" style="color: #2563EB; margin-left: 76px; font-size: 18px;">Optimizează-ți timpul și efortul îmbunătățindu-ți simultan toate competențele</h2>
                                </div>
                                <div class="col-md-6 d-flex justify-content-center align-items-center">
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="background-color: #2563EB; color: white; padding: 10px; width: 60%;">Începe acum!</MudButton>
                                </div>
                            </div>
                        </div>

                        <div style="padding: 15px; margin-bottom: 10px; margin-top: 60px;">
                            <p class="text-center" style="color: black; font-size: 18px;">
                                <MudIcon icon="@Icons.Material.Filled.Checklist" Size=Size.Large Color="Color.Success" />
                                Dornic de progres rapid? Evaluează-ți cunoștințele cu un test scurt și avansează la nivelul următor:
                            </p>
                            <div class="text-center">
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="background-color: #2563EB; color: white; padding: 10px; width: 25%;">Începe testul de evaluare!</MudButton>
                            </div>
                        </div>

                    </div>
                </MudExpansionPanel>
            }
        </div>
    </MudExpansionPanels>



    <div class="text-left">
        <h1 style="color: black; font-size: 33px; padding: 15px; margin-left: 80px; margin-top: 100px;" class="poppins-semi-bold">Alte cursuri</h1>
    </div>

    <div class="container p-3">
        <div class="row justify-content-center">

            <div class="col-md-4">
                <div class="card m-3" style="width: 375px;">
                    <img class="card-img-top" src="/images/homepage/homepage-1.png" style="max-width: 300px; max-height: 200px; display: block; margin: auto; margin-top: 15px;">
                    <div class="card-body">
                        <h5 class="card-title text-center">English 1</h5>
                        <div class="row">
                            <div class="col text-center">
                                <p><MudIcon Icon="@Icons.Material.Filled.Assignment" Style="font-size: 16px; color: #2563EB; margin-top: -5px;" /> Nivele: 2</p>
                            </div>
                            <div class="col text-center">
                                <p><MudIcon Icon="@Icons.Material.Filled.MenuBook" Style="font-size: 16px; color: #2563EB; margin-top: -5px;" /> Lecții: 2</p>
                            </div>
                        </div>

                        <div style="display: flex; justify-content: center;">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToWantPlacementTest" Style="background-color: #FC6F05; color: white; padding: 10px;">Începe Cursul</MudButton>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card m-3" style="width: 375px;">
                    <img class="card-img-top" src="/images/homepage/homepage-1.png" style="max-width: 300px; max-height: 200px; display: block; margin: auto; margin-top: 15px;">
                    <div class="card-body">
                        <h5 class="card-title text-center">English 1</h5>
                        <div class="row">
                            <div class="col text-center">
                                <p><MudIcon Icon="@Icons.Material.Filled.Assignment" Style="font-size: 16px; color: #2563EB; margin-top: -5px;" /> Nivele: 2</p>
                            </div>
                            <div class="col text-center">
                                <p><MudIcon Icon="@Icons.Material.Filled.MenuBook" Style="font-size: 16px; color: #2563EB; margin-top: -5px;" /> Lecții: 2</p>
                            </div>
                        </div>

                        <div style="display: flex; justify-content: center;">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToWantPlacementTest" Style="background-color: #FC6F05; color: white; padding: 10px;">Începe Cursul</MudButton>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card m-3" style="width: 375px;">
                    <img class="card-img-top" src="/images/homepage/homepage-1.png" style="max-width: 300px; max-height: 200px; display: block; margin: auto; margin-top: 15px;">
                    <div class="card-body">
                        <h5 class="card-title text-center">English 1</h5>
                        <div class="row">
                            <div class="col text-center">
                                <p><MudIcon Icon="@Icons.Material.Filled.Assignment" Style="font-size: 16px; color: #2563EB; margin-top: -5px;" /> Nivele: 2</p>
                            </div>
                            <div class="col text-center">
                                <p><MudIcon Icon="@Icons.Material.Filled.MenuBook" Style="font-size: 16px; color: #2563EB; margin-top: -5px;" /> Lecții: 2</p>
                            </div>
                        </div>

                        <div style="display: flex; justify-content: center;">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToWantPlacementTest" Style="background-color: #FC6F05; color: white; padding: 10px;">Începe Cursul</MudButton>
                        </div>
                    </div>
                </div>
            </div>

            <div style="display: flex; justify-content: center;">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="background-color: #FC6F05; color: white; padding: 10px; margin-top: 15px;">Vezi toate cursurile</MudButton>
            </div>

        </div>
    </div>
}    

<style>
    .poppins-semi-bold {
        font-family: 'Poppins-SemiBold', sans-serif;
    }

    .custom-width {
        width: 80%;
        margin: auto;
    }
</style>

@* ADIM APPROVAL *@
@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = true;
    private string searchString1 = "";
    private AdminElement selectedItem1 = null;
    private HashSet<AdminElement> selectedItems = new HashSet<AdminElement>();
    private Snackbar snackbar;
    bool _expanded = false;
    private AuthenticationState authState;
    public bool HasAdminRole = false;
    public bool HasStudentRole = false;

    private void OnExpandCollapseClick()
    {
        _expanded = !_expanded;
    }

    private IEnumerable<AdminElement> Elements = new List<AdminElement>();

    protected override async Task OnInitializedAsync()
    {
        authState = await authStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;
        var claims = user.Claims.ToList();

        //var userIdClaim = claims.FirstOrDefault(claim => claim.Type == "nameid");

        HasAdminRole = claims.Any(claim => claim.Type == "role" && claim.Value == "Admin");
        HasStudentRole = claims.Any(claim => claim.Type == "role" && (claim.Value == "Student" || claim.Value == "AdminPending"));

        await PopulateAdminAprovalTable();
        await PopulateLanguagesTable();
    }

    private async Task PopulateAdminAprovalTable()
    {
        Elements = new List<AdminElement>
        {
            new AdminElement { FirstName = "Test", LastName = "Test", Email = "test@example.com" },
            new AdminElement { FirstName = "Claudiu", LastName = "Vasile", Email = "claudiu@vasile.com" },
        };

        // Elements = await httpClient.GetFromJsonAsync<List<AdminElement>>("webapi/periodictable");
    }

    private bool FilterFunc1(AdminElement element) => FilterFunc(element, searchString1);

    private bool FilterFunc(AdminElement element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Email.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    void Approve(AdminElement element)
    {
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Administratorul " + element.FirstName + " " + element.LastName + " a fost aprobat cu succes!", Severity.Success);
    }

    void Reject(AdminElement element)
    {
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Administratorul " + element.FirstName + " " + element.LastName + " a fost respins!", Severity.Error);
    }
}


@* ADMIN VIEW & EDIT COURSES *@
@code {
    private List<string> editEvents = new();
    private bool ronly = false;
    private bool canCancelEdit = true;
    private bool blockSwitch = false;
    private string searchString = "";
    private AdminViewLanguageElement selectedAdminLanguage = null;
    private AdminViewLanguageElement elementBeforeEdit;
    private HashSet<AdminViewLanguageElement> selectedItems1 = new HashSet<AdminViewLanguageElement>();
    private TableApplyButtonPosition applyButtonPosition = TableApplyButtonPosition.End;
    private TableEditButtonPosition editButtonPosition = TableEditButtonPosition.End;
    private TableEditTrigger editTrigger = TableEditTrigger.EditButton;
    private IEnumerable<AdminViewLanguageElement> AdminLanguageElements = new List<AdminViewLanguageElement>();

    protected async Task PopulateLanguagesTable()
    {
        AdminLanguageElements = new List<AdminViewLanguageElement>
        {
            new AdminViewLanguageElement
            {
                LanguageName = "English",
                LanguageDescription = "Descriere buna",
                LanguageVideoLink = "https://www.youtube.com/watch?v=EzlRcGUdhA4&ab_channel=TheMotans-Topic",
                LanguageFlag = "https://vectorflags.s3-us-west-2.amazonaws.com/flags/uk-circle-01.png"
            },
            new AdminViewLanguageElement
            {
                LanguageName = "French",
                LanguageDescription = "Descriere sasa",
                LanguageVideoLink = "https://www.youtube.com/watch?v=EzlRcGUdhA4&ab_channel=TheMotans-Topic",
                LanguageFlag = "https://cdn2.iconfinder.com/data/icons/world-flag-2/30/3-512.png"
            },
        };

        // AdminLanguageElements = await httpClient.GetFromJsonAsync<List<AdminViewLanguageElement>>("webapi/periodictable");
    }

    private void AddEditionEvent(string message)
    {
        editEvents.Add(message);
        StateHasChanged();
    }

    private bool FilterFuncViewLanguage(AdminViewLanguageElement element) => FilterFuncViewLanguage1(element, searchString);

    private bool FilterFuncViewLanguage1(AdminViewLanguageElement element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.LanguageName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    void EditLanguage()
    {
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Informatiile au fost actualizate cu succes!", Severity.Success);
    }

    void DeleteLanguage()
    {
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Cursul a fost șters cu succes!", Severity.Success);
    }

    private bool visible;
    private string LanguageNameValue;
    private DialogOptions dialogOptions = new() { FullWidth = true, MaxWidth = MaxWidth.Small };

    void Cancel() => visible = false;

    void AddLanguage(string languageNameValue)
    {
        visible = false;
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Cursul '" + languageNameValue + "' a fost adăugat cu succes!", Severity.Success);
    }

    void OpenDialog()
    {
        visible = true;
    }

    void NavigateToLanguageOverview()
    {
        NavigationManager.NavigateTo("/language-overview");
    }
}


@* STUDENT VIEW HIS COURSES *@
@code {
    public class UserLanguage
    {
        public string LanguageName { get; set; }
        public List<UserLanguageLevel> UserLanguageLevels { get; set; }
    }

    public class UserLanguageLevel
    {
        public string LanguageCompetence { get; set; }
        public string LanguageLevel { get; set; }
    }

    private List<string> LanguageLevels { get; set; } = new List<string> { "A1", "A2", "B1", "B2", "C1", "C2" };
    private List<UserLanguage> UserLanguages { get; set; } = new List<UserLanguage>
    {
        new UserLanguage
        {
            LanguageName = "Limba Engleza",
            UserLanguageLevels = new List<UserLanguageLevel>
            {
                new UserLanguageLevel { LanguageCompetence = "Grammar", LanguageLevel = "B2" },
                new UserLanguageLevel { LanguageCompetence = "Listening", LanguageLevel = "C1" },
                new UserLanguageLevel { LanguageCompetence = "Speaking", LanguageLevel = "B1" },
                new UserLanguageLevel { LanguageCompetence = "Writing", LanguageLevel = "C2" }
            }
        },
        new UserLanguage
        {
            LanguageName = "Limba Franceza",
            UserLanguageLevels = new List<UserLanguageLevel>
            {
                new UserLanguageLevel { LanguageCompetence = "Grammar", LanguageLevel = "A2" },
                new UserLanguageLevel { LanguageCompetence = "Listening", LanguageLevel = "A1" },
                new UserLanguageLevel { LanguageCompetence = "Speaking", LanguageLevel = "A2" },
                new UserLanguageLevel { LanguageCompetence = "Writing", LanguageLevel = "C2" }
            }
        }
    };

    void NavigateToWantPlacementTest()
    {
        NavigationManager.NavigateTo("/want-placement-test");
    }
}