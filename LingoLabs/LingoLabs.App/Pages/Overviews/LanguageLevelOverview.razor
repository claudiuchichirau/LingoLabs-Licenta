@page "/language-level-overview"
@using LingoLabs.App.ViewModel.MudBlazor
@using MudBlazor
@using MatBlazor
@using System.Net.Http.Json
@using ViewModel.MudBlazor
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<div class="d-flex justify-content-around bg-secondary mb-3 align-items-center" style="width: 100%; height: 250px; margin-top: -10px; background: linear-gradient(to right, #2563EB, #36A7FC); position: relative; z-index: 1;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -45px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -30px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -15px; max-width: 150px;">
    <img src="/images/homepage/jos.png" style="position: absolute; bottom: 0; right: 0; max-width: 150px;">
    <img src="/images/homepage/sus.png" style="position: absolute; top: 0; right: 0; max-width: 200px;">
</div>

<MudContainer>
    <div class="row mx-0 justify-content-md-center" style="margin-top: -175px; margin-bottom:50px;">
        <div class="col-md-6 d-flex flex-column align-items-center justify-content-center" style="background-color: #E9EFFD; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); z-index: 1; border-radius: 15px;">
            <div class="row">
                <h2 style="color: #2563EB; padding: 20px; margin-top: 10px;" class="poppins-semi-bold">Nivel lingvistic - Overview</h2>
            </div>
        </div>
    </div>
</MudContainer>

<div class="row" style="max-width: 100vw; overflow-x: auto;">
    <div class="col">
        <div class="text-left">
            <h1 style="color: black; font-size: 33px; margin-left: 80px; margin-top: 50px; margin-bottom: 10px;" class="poppins-semi-bold">
                Curs:&emsp;
                <span style="color: #FC6F05; font-size: 25px;">
                    English
                </span>
            </h1>
        </div>

        <div class="text-left">
            <h1 style="color: black; font-size: 33px; margin-left: 75px; padding: 5px; padding: 5px;" class="poppins-semi-bold">
                Nume:&emsp;
                <span style="color: #2563EB; font-size: 25px;">
                    A1
                </span>
            </h1>
        </div>

        <div class="text-left">
            <h1 style="color: black; font-size: 33px; margin-left: 75px; padding: 5px;" class="poppins-semi-bold">
                Alias:&emsp;
                <span style="color: #2563EB; font-size: 25px;">
                    Beginner
                </span>
            </h1>
        </div>

        <div class="text-left">
            <h1 style="color: black; font-size: 33px; padding: 5px; margin-left: 75px;" class="poppins-semi-bold">
                Descriere:&emsp;
                <span style="font-size: 21px; color: #2563EB; text-align: justify;">
                    Nivelul lingvistic A1 este cel mai mic nivel de cunoștințe lingvistice. Persoanele care au acest nivel de cunoștințe lingvistice pot să înțeleagă și să folosească expresii simple și cotidiene, precum și să răspundă la întrebări simple. Acest nivel este cel mai mic nivel de cunoștințe lingvistice și este cel mai potrivit pentru persoanele care nu au cunoștințe de limba respectivă.
                </span>
            </h1>
        </div>

        <div class="text-left">
            <h1 style="color: black; font-size: 33px; padding: 5px; margin-left: 75px;" class="poppins-semi-bold">
                Nr. Crt.:&emsp;
                <span style="font-size: 21px; color: #2563EB; text-align: justify;">
                    1
                </span>
            </h1>
        </div>

    </div>
    <div class="col align-items-center justify-content-center">
        <div class="row">
            <div class="text-center">
                <h1 style="color: black; font-size: 33px; padding: 5px; margin-top: 50px;" class="poppins-semi-bold">
                    Video:
                 </h1>
            </div>
        </div>

        <div class="row justify-content-center">
            <iframe style="width: 600px; height: 338px; margin-top: 5px;" src="https://www.youtube.com/embed/CA1L7_hyRqs" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
    </div>
</div>

<div class="text-left" style="max-width: 100vw; overflow-x: auto;">
    <h1 style="color: black; font-size: 33px; padding: 5px; margin-left: 75px;" class="poppins-semi-bold">
        Cuvinte cheie:
    </h1>

    <MudContainer Style="overflow-x: hidden;">
        <div class="row mx-0" style="margin-top: 25px; margin-bottom: 50px; width: 333vh; min-height: 12vh;">
            <div class="col-md-6" style="background-color: #E9EFFD; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); z-index: 1; border-radius: 15px;">
                <MudTooltip>
                    <MudFab Icon="@Icons.Material.Filled.Add" Style="background-color: #2563EB; color: white; position: absolute; right: -25px; top: -25px;" @onclick='() => OpenDialog()' />
                </MudTooltip>

                <MudStack Row="true">
                    @foreach (var item in KewWords)
                    {
                        <MudPaper Class="pa-3" Style="background-color: #02497E; color: white;">@item</MudPaper>
                    }
                </MudStack>
            </div>
        </div>
    </MudContainer>

    <MudDialog @bind-IsVisible="visible" Options="dialogOptions">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.PlaylistAddCircle" Size="Size.Large" Style="background-color: transparent; color: #2563EB;" />
                <span style="color: #2563EB;">Adaugă un cuvânt cheie</span>
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField T="string" @bind-Value="keyWord" Label="Nume"></MudTextField>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="Cancel" Class="px-10" Style="color: black;">Close</MudButton>
            <MudButton Disabled="keyWord == null" OnClick="@(async () => AddKeyWord(keyWord))" Style="color: #2563EB;">Add</MudButton>

        </DialogActions>
    </MudDialog>

</div>

@* CHAPTERS *@
<div class="text-left">
    <h1 style="color: black; font-size: 33px; padding: 15px; margin-left: 80px; margin-top: 40px;" class="poppins-semi-bold">Capitole</h1>
</div>

<div style="max-width: 90%; margin: auto; margin-bottom: 55px;">
    <MudTable Items="@Chapters" Dense="@dense" Hover="@hover" ReadOnly="@ronly" CanCancelEdit="@canCancelEdit" Filter="new Func<ChapterElement,bool>(FilterFuncViewChapter)"
              @bind-SelectedItem="selectedChapter" SortLabel="Sort By" CommitEditTooltip="Commit Edit"
              OnCommitEditClick="@(() => EditChapter())"
              IsEditRowSwitchingBlocked="@blockSwitch" ApplyButtonPosition="@applyButtonPosition" EditButtonPosition="@editButtonPosition" EditTrigger="@editTrigger">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Capitole</MudText>
            <MudSpacer />
            <div class="text-center" style="width: 55%;">
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Style="width: 50%;" />
            </div>
            <MudTooltip Text="Add">
                <MudFab Icon="@Icons.Material.Filled.Add" Style="background-color: #FC6F05; color: white;" @onclick='() => OpenDialogChapter()' />
            </MudTooltip>
        </ToolBarContent>

        <ColGroup>
            @if (applyButtonPosition.DisplayApplyButtonAtStart() || (editButtonPosition.DisplayEditButtonAtStart() && editTrigger == TableEditTrigger.EditButton))
            {
                <col style="width:5%;" />
            }
            <col style="width:5%;" />
            <col style="width:15%;" />
            <col style="width:30%;" /> <!-- Descriere -->
            <col style="width:20%;" /> <!-- Link Video -->
            <col style="width:20%;" /> <!-- Link Imagine -->
            @if (applyButtonPosition.DisplayApplyButtonAtEnd() || (editButtonPosition.DisplayEditButtonAtEnd() && editTrigger == TableEditTrigger.EditButton))
            {
                <col style="width:5%;" />
            }
        </ColGroup>


        <HeaderContent>
            <MudTh Style="text-align: center;"><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ChapterElement, object>(x=>x.ChapterPriorityNumber)">Nr. Crt.</MudTableSortLabel></MudTh>
            <MudTh Style="text-align: center;"><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ChapterElement, object>(x=>x.ChapterName)">Nume</MudTableSortLabel></MudTh>
            <MudTh Style="text-align: center;"><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ChapterElement, object>(x=>x.ChapterDescription)">Descriere</MudTableSortLabel></MudTh>
            <MudTh Style="text-align: center;">Link Video</MudTh>
            <MudTh Style="text-align: center;">Link Imagine</MudTh>
            <MudTh Style="text-align: center;">Vizualizează</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr. Crt.">@context.ChapterPriorityNumber</MudTd>
            <MudTd DataLabel="Nume">@context.ChapterName</MudTd>
            <MudTd DataLabel="Descriere" Class="descriere">@context.ChapterDescription</MudTd>
            <MudTd DataLabel="Link Video" Class="video-data">@context.ChapterVideoData</MudTd>
            <MudTd DataLabel="Link Imagine" Class="image-data">@context.ChapterImageData</MudTd>
            <MudTd DataLabel="Vizualizează">
                <MudButton Variant="Variant.Filled" Style="background-color: #2563EB; color: white;" OnClick="@( () => NavigateToChapterOverview() )">Vezi mai multe</MudButton>
            </MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <MudTd DataLabel="Nr. Crt.">
                <MudTextField @bind-Value="@context.ChapterPriorityNumber" />
            </MudTd>
            <MudTd DataLabel="Nume">
                <MudTextField @bind-Value="@context.ChapterName" />
            </MudTd>
            <MudTd DataLabel="Descriere">
                <MudTextField @bind-Value="@context.ChapterDescription" />
            </MudTd>
            <MudTd DataLabel="Link Video">
                <MudTextField @bind-Value="@context.ChapterVideoData" />
            </MudTd>
            <MudTd DataLabel="Link Imagine">
                <MudTextField @bind-Value="@context.ChapterImageData" />
            </MudTd>
            <MudTd DataLabel="Vizualizează"></MudTd>
        </RowEditingTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
        <EditButtonContent Context="button">
            <div style="display: flex; flex-direction: row;">
                <MudTooltip Text="Editeaza capitolul">
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" Style="margin-right: 10px;" />
                </MudTooltip>
                <MudTooltip Text="Șterge capitolul">
                    <MudIconButton Text="Șterge capitolul" Size="@Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="DeleteChapter" Class="pa-0" Style="margin-left: 10px;" />
                </MudTooltip>
            </div>
        </EditButtonContent>
    </MudTable>

    <MudDialog @bind-IsVisible="visibleChapter" Options="dialogOptionsForLanguageLevel">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.PlaylistAddCircle" Size="Size.Large" Style="background-color: transparent; color: #2563EB;" />
                <span style="color: #2563EB;">Adaugă un nou capitol</span>
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField T="string" @bind-Value="ChapterNameValue" Label="Nume"></MudTextField>
            <MudSelect T="Guid" Label="Selectează competența lingvistică" @bind-Value="selectedCompetenceId">
                @foreach (var competence in LanguageCompetences)
                {
                    <MudSelectItem Value="@competence.LanguageCompetenceId">@competence.LanguageCompetenceName</MudSelectItem>
                }
            </MudSelect>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="CancelAddChapter" Class="px-10" Style="color: black;">Close</MudButton>
            <MudButton Disabled="ChapterNameValue == null || selectedCompetenceId == null" OnClick="@(async () => AddChapter(ChapterNameValue, selectedCompetenceId))" Style="color: #2563EB;">Add</MudButton>

        </DialogActions>
    </MudDialog>
</div>



@* KEW WORDS *@
@code {
    private Snackbar snackbar;
    private bool visible;
    private string currentField;
    private string newValue;
    private bool isModified = false;
    private string keyWord;

    void Submit()
    {
        visible = false;
    }

    void Cancel() => visible = false;

    void OpenDialog()
    {
        visible = true;
    }

    private DialogOptions dialogOptions = new() { FullWidth = true, MaxWidth = MaxWidth.Small };

    void AddKeyWord(string keyWord)
    {
        visible = false;
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Cuvântul cheie a fost adăugat cu succes!", Severity.Success);
    }

    protected override async Task OnInitializedAsync()
    {
        await PopulateKewWords();
        await PopulateChaptersTable();
        await PopulateLanguageCompetenceList();
    }

    private IEnumerable<string> KewWords = new List<string>();
    int containerWidth = 333; // Width of MudContainer (in vh units)
    int totalWidth; // Total width of elements (in vh units)
    int numRows; // Number of rows needed

    private async Task PopulateKewWords()
    {
        KewWords = new List<string>
        {
            "Cuvânt cheie 1",
            "Cuvânt cheie 2",
            "Cuvânt cheie 3"
        };

        // Elements = await httpClient.GetFromJsonAsync<List<AdminElement>>("webapi/periodictable");
    }

    void CalculateRowsAndWidth()
    {
        totalWidth = KewWords.Sum(kw => kw.Length);
        numRows = (int)Math.Ceiling((double)totalWidth / containerWidth);
    }
}

@* VIED & EDIT CHAPTERS *@
@code {
    private bool dense = false;
    private bool hover = true;
    private List<string> editEvents = new();
    private bool ronly = false;
    private bool canCancelEdit = true;
    private bool blockSwitch = false;
    private string searchString = "";
    private ChapterElement selectedChapter = null;
    private ChapterElement elementBeforeEdit;
    private HashSet<ChapterElement> selectedItems1 = new HashSet<ChapterElement>();
    private TableApplyButtonPosition applyButtonPosition = TableApplyButtonPosition.End;
    private TableEditButtonPosition editButtonPosition = TableEditButtonPosition.End;
    private TableEditTrigger editTrigger = TableEditTrigger.EditButton;
    private IEnumerable<ChapterElement> Chapters = new List<ChapterElement>();

    protected async Task PopulateChaptersTable()
    {
        Chapters = new List<ChapterElement>
        {
            new ChapterElement
            {
                ChapterName = "Introduction",
                ChapterDescription = "Acesta este primul capitol din cursul de limba engleză pentru nivelul A1. În acest capitol veți învăța despre saluturi, prezentări și alte aspecte de bază ale limbii engleze.",
                ChapterVideoData = "https://www.youtube.com/watch?v=EzlRcGUdhA4&ab_channel=TheMotans-Topic",
                ChapterImageData = "https://www.youtube.com/watch?v=EzlRcGUdhA4&ab_channel=TheMotans-Topic",
                ChapterPriorityNumber = 1
            },
            new ChapterElement
            {
                ChapterName = "Xltceva",
                ChapterDescription = null,
                ChapterVideoData = null,
                ChapterImageData = null,
                ChapterPriorityNumber = null
            }
        };

        // AdminLanguageElements = await httpClient.GetFromJsonAsync<List<AdminViewLanguageElement>>("webapi/periodictable");
    }

    private IEnumerable<LanguageCompetenceElement> LanguageCompetences = new List<LanguageCompetenceElement>();
    private Guid selectedCompetenceId;

    protected async Task PopulateLanguageCompetenceList()
    {
        LanguageCompetences = new List<LanguageCompetenceElement>
        {
            new LanguageCompetenceElement
            {
                LanguageCompetenceId = Guid.NewGuid(),
                LanguageCompetenceName = "Vorbire",
                LanguageCompetenceDescription = "Vorbirea este abilitatea de a vorbi fluent și corect într-o limbă străină.",
                LanguageCompetenceVideoLink = "https://www.youtube.com/watch?v=EzlRcGUdhA4&ab_channel=TheMotans-Topic",
                LanguageCompetencePriorityNumber = 1
            },
            new LanguageCompetenceElement
            {
                LanguageCompetenceId = Guid.NewGuid(),
                LanguageCompetenceName = "Ascultare",
                LanguageCompetenceDescription = "Ascultarea este abilitatea de a asculta și înțelege corect ceea ce se spune într-o limbă străină.",
                LanguageCompetenceVideoLink = null,
                LanguageCompetencePriorityNumber = 2
            }
        };

        // AdminLanguageElements = await httpClient.GetFromJsonAsync<List<AdminViewLanguageElement>>("webapi/periodictable");
    }

    private void AddEditionEvent(string message)
    {
        editEvents.Add(message);
        StateHasChanged();
    }

    private bool FilterFuncViewChapter(ChapterElement element) => FilterFuncViewChapter1(element, searchString);

    private bool FilterFuncViewChapter1(ChapterElement element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.ChapterName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.ChapterDescription != null && element.ChapterDescription.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    void EditChapter()
    {
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Informatiile au fost actualizate cu succes!", Severity.Success);
    }

    void DeleteChapter()
    {
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Capitolul a fost șters cu succes!", Severity.Success);
    }

    private bool visibleChapter;
    private string ChapterNameValue;
    private DialogOptions dialogOptionsForLanguageLevel = new() { FullWidth = true, MaxWidth = MaxWidth.Small };

    void CancelAddChapter() => visibleChapter = false;

    void AddChapter(string chapterNameValue, Guid selectedCompetenceId)
    {
        visibleChapter = false;
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Capitolul a fost adăugat cu succes!", Severity.Success);
    }

    void OpenDialogChapter()
    {
        visibleChapter = true;
    }

    void NavigateToChapterOverview()
    {
        NavigationManager.NavigateTo("/chapter-overview");
    }
}