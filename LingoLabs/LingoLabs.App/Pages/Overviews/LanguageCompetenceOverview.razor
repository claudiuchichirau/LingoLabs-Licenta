@page "/language-competence-overview/{Id}"
@using LingoLabs.App.Contracts.LanguageContracts
@using LingoLabs.App.Services.AuthServices
@using LingoLabs.App.ViewModel.LanguageModels
@using LingoLabs.App.ViewModel.MudBlazor
@using MudBlazor
@using MatBlazor
@using System.Net.Http.Json
@using ViewModel.MudBlazor
@inject HttpClient httpClient
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject StateService StateService

<div class="d-flex justify-content-around bg-secondary mb-3 align-items-center" style="width: 100%; height: 250px; margin-top: -10px; background: linear-gradient(to right, #2563EB, #36A7FC); position: relative; z-index: 1;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -45px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -30px; max-width: 150px;">
    <img src="/images/homepage/line.png" style="position: absolute; top: 0; left: -15px; max-width: 150px;">
    <img src="/images/homepage/jos.png" style="position: absolute; bottom: 0; right: 0; max-width: 150px;">
    <img src="/images/homepage/sus.png" style="position: absolute; top: 0; right: 0; max-width: 200px;">
</div>

@if (!isLoaded)
{
    <div class="row mx-0 justify-content-md-center">
        <div class="col-md-6 d-flex flex-column align-items-center justify-item-center" style="margin-top: 50px;">
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        </div>
    </div>
}
else
{
    <MudContainer>
        <div class="row mx-0 justify-content-md-center" style="margin-top: -175px; margin-bottom:50px;">
            <div class="col-md-6 d-flex flex-column align-items-center justify-content-center" style="background-color: #E9EFFD; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); z-index: 1; border-radius: 15px;">
                <div class="row">
                    <h2 style="color: #2563EB; padding: 20px; margin-top: 10px;" class="poppins-semi-bold">Competența lingvistică - Overview</h2>
                </div>
            </div>
        </div>
    </MudContainer>

    <div class="row" style="max-width: 100vw; overflow-x: auto;">
        <div class="col">
            <div class="text-left">
                <h1 style="color: black; font-size: 33px; margin-left: 80px; margin-top: 50px; margin-bottom: 10px;" class="poppins-semi-bold">
                    Curs:&emsp;
                    <span style="color: #FC6F05; font-size: 25px;">
                        @languageCompetence.LanguageName
                    </span>
                </h1>
            </div>

            <div class="text-left">
                <h1 style="color: black; font-size: 33px; margin-left: 75px; padding: 5px;" class="poppins-semi-bold">
                    Nume:&emsp;
                    <span style="color: #2563EB; font-size: 25px;">
                        @languageCompetence.LanguageCompetenceName
                    </span>
                </h1>
            </div>

            <div class="text-left">
                <h1 style="color: black; font-size: 33px; margin-left: 75px; padding: 5px;" class="poppins-semi-bold">
                    Tip:&emsp;
                    <span style="color: #2563EB; font-size: 21px;">
                        @languageCompetence.LanguageCompetenceType
                    </span>
                </h1>
            </div>

            <div class="text-left">
                <h1 style="color: black; font-size: 33px; padding: 5px; margin-left: 75px;" class="poppins-semi-bold">
                    Descriere:&emsp;
                    @if (!string.IsNullOrEmpty(languageCompetence.LanguageCompetenceDescription))
                    {
                        <span style="font-size: 21px; color: #2563EB; text-align: justify;">
                            @languageCompetence.LanguageCompetenceDescription
                        </span>
                    }
                    else
                    {
                        <span style="font-size: 21px; color: #2563EB; text-align: justify;">-</span>
                    }
                </h1>
            </div>

            <div class="text-left">
                <h1 style="color: black; font-size: 33px; padding: 5px; margin-left: 75px;" class="poppins-semi-bold">
                    Nr. Crt.:&emsp;
                    @if (languageCompetence.LanguageCompetencePriorityNumber != 0 || languageCompetence.LanguageCompetencePriorityNumber != null)
                    {
                        <span style="font-size: 21px; color: #2563EB; text-align: justify;">
                            @languageCompetence.LanguageCompetencePriorityNumber
                        </span>
                    }
                    else
                    {
                        <span style="font-size: 21px; color: #2563EB; text-align: justify;">-</span>
                    }
                </h1>
            </div>

        </div>

        @if (!string.IsNullOrEmpty(languageCompetence.LanguageCompetenceVideoLink))
        {
            <div class="col align-items-center justify-content-center">
                <div class="row">
                    <div class="text-center">
                        <h1 style="color: black; font-size: 33px; padding: 5px; margin-top: 50px;" class="poppins-semi-bold">
                            Video:
                        </h1>
                    </div>
                </div>

                <div class="row justify-content-center">
                    <iframe style="width: 600px; height: 338px; margin-top: 5px; margin-bottom: 45px;" src="@languageCompetence.LanguageCompetenceVideoLink" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </div>
            </div>
        }
        else {
            <div class="col align-items-center justify-content-center">
                <div class="row">
                    <div class="text-center">
                        <h1 style="color: black; font-size: 33px; padding: 5px; margin-top: 50px;" class="poppins-semi-bold">
                            Video: -
                        </h1>
                    </div>
                </div>
            </div>
        }
    </div>
}
@* <div class="text-left" style="max-width: 100vw; overflow-x: auto;">
    <h1 style="color: black; font-size: 33px; padding: 5px; margin-left: 75px;" class="poppins-semi-bold">
        Cuvinte cheie:
    </h1>

    <MudContainer Style="overflow-x: hidden;">
        <div class="row mx-0" style="margin-top: 25px; margin-bottom: 50px; width: 333vh; min-height: 12vh;">
            <div class="col-md-6" style="background-color: #E9EFFD; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); z-index: 1; border-radius: 15px;">
                <MudTooltip>
                    <MudFab Icon="@Icons.Material.Filled.Add" Style="background-color: #2563EB; color: white; position: absolute; right: -25px; top: -25px;" @onclick='() => OpenDialog()' />
                </MudTooltip>

                <MudStack Row="true">
                    @foreach (var item in KewWords)
                    {
                        <MudPaper Class="pa-3" Style="background-color: #02497E; color: white;">@item</MudPaper>
                    }
                </MudStack>
            </div>
        </div>
    </MudContainer>

    <MudDialog @bind-IsVisible="visible" Options="dialogOptions">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.PlaylistAddCircle" Size="Size.Large" Style="background-color: transparent; color: #2563EB;" />
                <span style="color: #2563EB;">Adaugă un cuvânt cheie</span>
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField T="string" @bind-Value="keyWord" Label="Nume"></MudTextField>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="Cancel" Class="px-10" Style="color: black;">Close</MudButton>
            <MudButton Disabled="keyWord == null" OnClick="@(async () => AddKeyWord(keyWord))" Style="color: #2563EB;">Add</MudButton>

        </DialogActions>
    </MudDialog>

</div> *@


@code {
    [Inject]
    private ILanguageCompetenceDataService LanguageCompetenceDataService { get; set; }
    private LanguageCompetenceViewModel languageCompetence = new LanguageCompetenceViewModel();
    [Parameter]
    public string Id { get; set; }
    private Guid CurrentLanguageCompetenceId = Guid.Empty;
    private bool isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        CurrentLanguageCompetenceId = Guid.Parse(Id);
        languageCompetence = await LanguageCompetenceDataService.GetLanguageCompetenceByIdAsync(CurrentLanguageCompetenceId);
        isLoaded = true;

        await PopulateKewWords();
    }
}

@* KEW WORDS *@
@functions {
    private Snackbar snackbar;
    private bool visible;
    private string currentField;
    private string newValue;
    private bool isModified = false;
    private string keyWord;

    void Submit()
    {
        visible = false;
    }

    void Cancel() => visible = false;

    void OpenDialog()
    {
        visible = true;
    }

    private DialogOptions dialogOptions = new() { FullWidth = true, MaxWidth = MaxWidth.Small };

    void AddKeyWord(string keyWord)
    {
        visible = false;
        // Do something
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
        snackbar = Snackbar.Add("Cuvântul cheie a fost adăugat cu succes!", Severity.Success);
    }

    private IEnumerable<string> KewWords = new List<string>();
    int containerWidth = 333; // Width of MudContainer (in vh units)
    int totalWidth; // Total width of elements (in vh units)
    int numRows; // Number of rows needed

    private async Task PopulateKewWords()
    {
        KewWords = new List<string>
        {
            "Cuvânt cheie 1",
            "Cuvânt cheie 2",
            "Cuvânt cheie 3"
        };

        // Elements = await httpClient.GetFromJsonAsync<List<AdminElement>>("webapi/periodictable");
    }

    void CalculateRowsAndWidth()
    {
        totalWidth = KewWords.Sum(kw => kw.Length);
        numRows = (int)Math.Ceiling((double)totalWidth / containerWidth);
    }
}